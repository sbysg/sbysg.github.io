<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>夢のない賢魚です</title>
    <subtitle>biya</subtitle>
    <icon>http://example.com/assets/favicon.ico</icon>
    <link href="http://example.com" />
    <author>
      <name>biya</name>
    </author>
    <updated>2023-10-22T17:40:23.767Z</updated>
    <entry>
        <id>http://example.com/2023/10/23/Linux/docker/vue3%E9%80%9F%E6%88%9010.17/Vue3%E9%80%9F%E6%88%90/</id>
        <title></title>
        <link rel="alternate" href="http://example.com/2023/10/23/Linux/docker/vue3%E9%80%9F%E6%88%9010.17/Vue3%E9%80%9F%E6%88%90/"/>
        <content type="html">&lt;h1 id=&#34;vue3速成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue3速成&#34;&gt;#&lt;/a&gt; Vue3 速成&lt;/h1&gt;
&lt;h2 id=&#34;0-vue2-vs-vue3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#0-vue2-vs-vue3&#34;&gt;#&lt;/a&gt; 0、Vue2 VS Vue3&lt;/h2&gt;
&lt;h2 id=&#34;1-vue3js&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-vue3js&#34;&gt;#&lt;/a&gt; 1、Vue3.js&lt;/h2&gt;
&lt;p&gt;Vue: 是一款用于构建用户界面的 JavaScript 框架，提供了一套声明式的、组件化的编程模型&lt;/p&gt;
&lt;p&gt;官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbi52dWVqcy5vcmcv&#34;&gt;https://cn.vuejs.org/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Vue3 特有的语法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.setup：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;vue3 中新增了 setup，它的出现是为了解决组件内容庞大后，理解和维护组件变得困难的问题。即 vue 中 data、computed、methods、watch 等内容非常多以后，同一业务逻辑的 data 中的数据和 methods 中的方法在 vue 文件中 “相隔甚远”，看代码时，经常需要根据 data 中的数据去搜索找到对应的 methods 方法，上下跳跃查看代码，非常不方便。而在 setup 中，则可以把 data 中的数据和 methods 方法写在相临的位置，方便查看和维护。&lt;/p&gt;
&lt;p&gt;开启了 setup 就不需要在定义 data 或 methods 了，直接在 script 标签写就行&lt;/p&gt;
&lt;p&gt;直接在 script 标签上使用 setup&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!--js代码--&amp;gt;
&amp;lt;script setup&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;**const：** 定义常量，在 vue3 中被用来定义变量或函数&lt;/p&gt;
&lt;p&gt;定义变量时，因为要保证 vue 的响应式，所以配合 ref 函数使用&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ref 函数：&lt;/strong&gt;&lt;br /&gt;
作用：定义一个响应式的数据&lt;br /&gt;
语法: const xxx = ref (initValue)&lt;br /&gt;
 创建一个包含响应式数据的引用对象（reference 对象，简称 ref 对象）。&lt;br /&gt;
JS 中操作数据： xxx.value&lt;br /&gt;
 模板中读取数据：不需要.value，直接：div  /div&lt;br /&gt;
 备注：&lt;br /&gt;
接收的数据可以是：基本类型、也可以是对象类型。&lt;br /&gt;
基本类型的数据：响应式依然是靠 Object.defineProperty () 的 get 与 set 完成的。&lt;br /&gt;
对象类型的数据：内部 “求助” 了 Vue3.0 中的一个新函数 —— reactive 函数。&lt;/p&gt;
&lt;p&gt;适用于：基本类型 (数字、字符串、布尔值)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;reactive 函数：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;reactive&lt;/code&gt;  是 Vue3 中提供的实现响应式数据的方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;reactive 参数必须是对象 (json /arr)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果给 reactive 传递了其它对象&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认情况下，修改对象无法实现界面的数据绑定更新。&lt;/li&gt;
&lt;li&gt;如果需要更新，需要进行重新赋值。(即不允许直接操作数据，需要放个新的数据来替代原数据)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;适用于 对象或数组&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;核心的语法知识：&lt;/p&gt;
&lt;p&gt;**1. 模板语法：** 插值语法&lt;/p&gt;
&lt;p&gt;语法格式：&amp;lt;标签&amp;gt;&amp;lt;/ 标签 &amp;gt;&lt;/p&gt;
&lt;p&gt;**2. 事件绑定：** 实现标签的事件的设置&lt;/p&gt;
&lt;p&gt;语法格式：&amp;lt;标签 v-on: 事件名 =&amp;quot;方法名&amp;quot;&amp;gt;&amp;lt;/ 标签 &amp;gt;  简写 &amp;lt; 标签 @事件名 =&amp;quot;方法名&amp;quot;&amp;gt;&amp;lt;/ 标签 &amp;gt;&lt;/p&gt;
&lt;p&gt;**3. 属性绑定：** 实现标签的属性的设置&lt;/p&gt;
&lt;p&gt;语法格式：&amp;lt;标签 v-bind: 属性名 =&amp;quot;变量名&amp;quot;&amp;gt;&amp;lt;/ 标签 &amp;gt;  简写 &amp;lt; 标签：属性名 =&amp;quot;变量名&amp;quot;&amp;gt;&amp;lt;/ 标签 &amp;gt;&lt;/p&gt;
&lt;p&gt;**4. 分支语法：** 实现分支语句&lt;/p&gt;
&lt;p&gt;语法格式：&amp;lt;标签 v-if=&amp;quot;布尔类型表达式&amp;quot;&amp;gt;&amp;lt;/ 标签 &amp;gt;&lt;/p&gt;
&lt;p&gt;**5. 循环语法：** 实现重复 集合 遍历&lt;/p&gt;
&lt;p&gt;语法格式：&amp;lt;标签 v-for=&amp;quot;变量名 in 数组或集合名&amp;quot;&amp;gt;&amp;lt;/ 标签 &amp;gt;&lt;/p&gt;
&lt;p&gt;**6. 双向绑定：** 实现输入标签（表单标签）的值的绑定，双向&lt;/p&gt;
&lt;p&gt;语法格式：&amp;lt;标签 v-model=&amp;quot;变量名&amp;quot;&amp;gt;&amp;lt;/ 标签 &amp;gt;&lt;/p&gt;
&lt;p&gt;示例代码：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Title&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!--    vue.js--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;https://unpkg.com/vue@3/dist/vue.global.js&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token style&#34;&gt;&lt;span class=&#34;token language-css&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token selector&#34;&gt;.dvcolor&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token selector&#34;&gt;.dvgreen&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; green&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 标签 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;app&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!--    1. 插值 message 来自下面的变量 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token value css language-css&#34;&gt;&lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; red&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;点-&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!--    2. 事件 - 绑定 @click 点击事件 指定函数 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;@click&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;ck()&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;困了点点我&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!--    3. 属性 - 绑定：属性名 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;:class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;dvcls&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;@click&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;change&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;你的心情&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;span class=&#34;token language-javascript&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 引入&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; createApp&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ref &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Vue&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 创建&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;createApp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;//setup 标记 Vue3 支持 Vue3 的语法 直接定义变量、函数都可以&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;//const 常量 一般配合 ref（Vue3 语法）把一个常量变成一个对象，这个对象默认拥有属性 value&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; message &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ref&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Hello vue!&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; num&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ref&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; dvcls&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ref&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;dvcolor&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 定义 函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ck&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                num&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                message&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;你点我&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;num&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;次！&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;message&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token function-variable function&#34;&gt;change&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dvcls&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;//js 关闭定时任务&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token function&#34;&gt;clearInterval&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;//js 开启定时任务&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    t&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setInterval&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dvcls&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;dvcolor&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                            dvcls&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;dvgreen&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                            dvcls&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;dvcolor&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dvcls&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;dvcolor&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  dvcls&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;dvgreen&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  dvcls&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;dvcolor&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 只有返回的上面才可以使用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                message&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;ck&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;num&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;dvcls&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;change&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;#app&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;en&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Title&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;https://unpkg.com/vue@3/dist/vue.global.js&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Vue3的语法学习&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;dv01&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!--        4. 分支语句 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;v-if&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;user.name!=null&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;用户名：&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;v-else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;@click&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;login&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;点击登录&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;@click&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;logout&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;注销登录&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!--        5. 循环语句 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;精英小组&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;v-for&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;(n,index) in names&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;@click&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;del(index)&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!--            6. 双向绑定 表单标签：输入框（输入框、单选框、复选框）、下拉框、文本域 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;v-model&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;@click&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;add&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;加入精英小组&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;span class=&#34;token language-javascript&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 引入&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; createApp&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ref &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Vue&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 创建&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;createApp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;//setup 标记 Vue3 支持 Vue3 的语法 直接定义变量、函数都可以&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;//const 常量 一般配合 ref（Vue3 语法）把一个常量变成一个对象，这个对象默认拥有属性 value&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 变量 对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; user &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ref&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 变量 数组&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; names &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ref&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token string&#34;&gt;&#34;邢朋辉&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;田密&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;许阳&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ref&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token function-variable function&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              names&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;names&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token function-variable function&#34;&gt;del&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;//splice 数组中删除，参数说明：1. 从哪个索引开始删除 2. 删除几个&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              names&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;splice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 定义函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token function-variable function&#34;&gt;login&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              user&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;帅帅的邢&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token function-variable function&#34;&gt;logout&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                user&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 只有返回的上面才可以使用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                user&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;login&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;logout&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;names&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;add&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;del&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;#dv01&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;2-vite&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-vite&#34;&gt;#&lt;/a&gt; 2、Vite&lt;/h2&gt;
&lt;p&gt;Vite：是一种新型前端构建工具，能够显著提升前端开发体验&lt;/p&gt;
&lt;p&gt;脚手架，创建 Vue 项目，替代 Vue-cli&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Vite 需要 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==&#34;&gt;Node.js&lt;/span&gt; 版本 14.18+，16+。然而，有些模板需要依赖更高的 Node 版本才能正常运行，当你的包管理器发出警告时，请注意升级你的 Node 版本。&lt;/p&gt;
&lt;p&gt;npm &amp;gt;10.2.0 以上版本&lt;/p&gt;
&lt;p&gt;如果版本低，升级一下：&lt;/p&gt;
&lt;p&gt;npm install -g npm@10.2.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;基于 Vite 创建 vue 项目：&lt;/p&gt;
&lt;p&gt;1.cmd 或终端执行命令&lt;/p&gt;
&lt;p&gt;npm create vite@latest&lt;/p&gt;
&lt;p&gt;如果报 npm 版本过低，需要执行 npm install -g npm@10.2.0  升级 npm 的版本&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;Vue3%E9%80%9F%E6%88%90.assets/image-20231017115210999.png&#34; alt=&#34;image-20231017115210999&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2. 完成初始化&lt;/p&gt;
&lt;p&gt;分别执行：&lt;/p&gt;
&lt;p&gt;cd vue02&lt;br /&gt;
npm install&lt;br /&gt;
npm run dev&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;Vue3%E9%80%9F%E6%88%90.assets/image-20231017115330906.png&#34; alt=&#34;image-20231017115330906&#34; /&gt;&lt;/p&gt;
&lt;p&gt;3. 访问&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;Vue3%E9%80%9F%E6%88%90.assets/image-20231017115350991.png&#34; alt=&#34;image-20231017115350991&#34; /&gt;&lt;/p&gt;
&lt;p&gt;vite 的项目结构：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;Vue3%E9%80%9F%E6%88%90.assets/image-20231017115446998.png&#34; alt=&#34;image-20231017115446998&#34; /&gt;&lt;/p&gt;
&lt;p&gt;vue 页面结构：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!--html标签--&amp;gt;
&amp;lt;template&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;h1&amp;gt;饿了么？&amp;lt;/h1&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;HelloWorld msg=&amp;quot;Vite + Vue&amp;quot; /&amp;gt;
&amp;lt;/template&amp;gt;
&amp;lt;!--js代码 vue3的语法--&amp;gt;
&amp;lt;script setup&amp;gt;
import HelloWorld from &#39;./components/HelloWorld.vue&#39;

&amp;lt;/script&amp;gt;
&amp;lt;!--css样式 美化--&amp;gt;
&amp;lt;style scoped&amp;gt;

&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vue 页面使用 Vue3 语法&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
  &amp;lt;h1&amp;gt;&amp;#123;&amp;#123; msg &amp;#125;&amp;#125;&amp;lt;/h1&amp;gt;
  &amp;lt;h1&amp;gt;醒醒，不能犯困！&amp;lt;/h1&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;h1&amp;gt;次数：&amp;#123;&amp;#123;count&amp;#125;&amp;#125;&amp;lt;/h1&amp;gt;
    &amp;lt;button @click=&amp;quot;dj&amp;quot;&amp;gt;点击我，看看什么效果&amp;lt;/button&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;!--Vue3的写法--&amp;gt;
&amp;lt;script setup&amp;gt;
//2.导入 Vue3中对象
import &amp;#123; ref &amp;#125; from &#39;vue&#39;

//3.自定义属性
defineProps(&amp;#123;
  msg: String,
&amp;#125;)
//4.定义变量
const count = ref(0)
//5.定义函数
const dj = () =&amp;gt; &amp;#123;
  count.value++;
  alert(&amp;quot;你目前点击：&amp;quot;+count.value);
&amp;#125;
&amp;lt;/script&amp;gt;

&amp;lt;style scoped&amp;gt;
.read-the-docs &amp;#123;
  color: #888;
&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;3-vue-router&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-vue-router&#34;&gt;#&lt;/a&gt; 3、Vue-router&lt;/h2&gt;
&lt;h3 id=&#34;31-vue-router是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31-vue-router是什么&#34;&gt;#&lt;/a&gt; 3.1 Vue-router 是什么&lt;/h3&gt;
&lt;p&gt;Vue-router:Vue.js 的官方路由为 Vue.js 提供富有表现力、可配置的、方便的路由&lt;/p&gt;
&lt;p&gt;官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yb3V0ZXIudnVlanMub3JnL3poLw==&#34;&gt;https://router.vuejs.org/zh/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;作用：&lt;/p&gt;
&lt;p&gt;1. 实现 vue 页面 (组件) 的跳转&lt;/p&gt;
&lt;p&gt;2. 可以在跳转的时候携带参数&lt;/p&gt;
&lt;h3 id=&#34;32-vue3使用vue-router&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#32-vue3使用vue-router&#34;&gt;#&lt;/a&gt; 3.2 Vue3 使用 Vue-router&lt;/h3&gt;
&lt;p&gt;基于 Vue-router 实现页面跳转：&lt;/p&gt;
&lt;p&gt;1. 安装 vue-router&lt;/p&gt;
&lt;p&gt;npm install vue-router@4&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;Vue3%E9%80%9F%E6%88%90.assets/image-20231017151206218.png&#34; alt=&#34;image-20231017151206218&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2. 在 src 创建路由的 js 文件&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;createRouter &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; _createRouter&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; createWebHistory&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vue-router&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 导入 凡是想要通过路由跳转的，都需要在这：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 1. 导入&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 2. 注册 设置对应 vue 组件的路径名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; study &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;../views/study.vue&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; routes &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 2. 注册 设置对应 vue 组件的路径名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/study&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; study &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;createRouter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;_createRouter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;history&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;createWebHistory&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        routes&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;Vue3%E9%80%9F%E6%88%90.assets/image-20231017151308655.png&#34; alt=&#34;image-20231017151308655&#34; /&gt;&lt;/p&gt;
&lt;p&gt;3. 在 main.js 中实现路由的配置&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; createApp &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./style.css&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; App &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./App.vue&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 导入路由&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; createRouter &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./router/index.js&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 配置路由&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;createApp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;App&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createRouter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;#app&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;4. 在 app.vue 主页 使用路由&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!--html标签--&amp;gt;
&amp;lt;template&amp;gt;
  &amp;lt;div&amp;gt;
&amp;lt;!--    静态路由 to 对应路径--&amp;gt;
    &amp;lt;router-link to=&amp;quot;/study&amp;quot;&amp;gt;静态路由&amp;lt;/router-link&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;
&amp;lt;!--  路由跳转的页面显示去  --&amp;gt;
    &amp;lt;router-view/&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&amp;lt;!--js代码 vue3的语法--&amp;gt;
&amp;lt;script setup&amp;gt;

&amp;lt;/script&amp;gt;
&amp;lt;!--css样式 美化--&amp;gt;
&amp;lt;style scoped&amp;gt;

&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;5. 实现一个 vue3 的页面编写&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!--标签 画页面--&amp;gt;
&amp;lt;template&amp;gt;
&amp;lt;div&amp;gt;
  &amp;lt;h1&amp;gt;学习vue3&amp;lt;/h1&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;h1&amp;gt;内容：&amp;#123;&amp;#123;str1&amp;#125;&amp;#125;&amp;lt;/h1&amp;gt;
    &amp;lt;button style=&amp;quot;font-size: 30px;color: red&amp;quot; @click=&amp;quot;show&amp;quot;&amp;gt;查看内容&amp;lt;/button&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;!--Vue3的写法 setup--&amp;gt;
&amp;lt;script setup&amp;gt;
//导入
import &amp;#123;ref&amp;#125; from &#39;vue&#39;

//定义变量
const str1=ref(&amp;quot;醒醒……&amp;quot;);
//定义函数
const show=()=&amp;gt;&amp;#123;
  alert(str1.value);
&amp;#125;

&amp;lt;/script&amp;gt;

&amp;lt;style scoped&amp;gt;

&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;33-vue-router实现跳转的方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#33-vue-router实现跳转的方式&#34;&gt;#&lt;/a&gt; 3.3 Vue-router 实现跳转的方式&lt;/h3&gt;
&lt;p&gt;vue-router 实现页面跳转有 2 种方式：&lt;/p&gt;
&lt;p&gt;必须在页面使用：router-view (一般写在 app.vue 页面)&lt;/p&gt;
&lt;p&gt;第一种：声明式路由（静态路由）&lt;/p&gt;
&lt;p&gt;直接在 template 里面使用 router-link 标签 通过 to 属性实现页面跳转&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;  &amp;lt;div&amp;gt;
&amp;lt;!--    静态路由 to 对应路径--&amp;gt;
    &amp;lt;router-link to=&amp;quot;/study&amp;quot;&amp;gt;静态路由&amp;lt;/router-link&amp;gt;
  &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第二种：编程式路由（动态路由）&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
&amp;lt;div&amp;gt;
  &amp;lt;h1&amp;gt;动态路由&amp;lt;/h1&amp;gt;
  &amp;lt;button @click=&amp;quot;tz&amp;quot;&amp;gt;点击跳转&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script setup&amp;gt;
// 导入
import &amp;#123;ref&amp;#125; from &#39;vue&#39;
import &amp;#123; useRouter &amp;#125; from &#39;vue-router&#39;
// 声明变量
const router=useRouter()
const tz=()=&amp;gt;&amp;#123;
  //基于路由 实现页面跳转 动态路由
  router.push(&amp;quot;/study&amp;quot;);
&amp;#125;
&amp;lt;/script&amp;gt;

&amp;lt;style scoped&amp;gt;

&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;34-vue-router实现传值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#34-vue-router实现传值&#34;&gt;#&lt;/a&gt; 3.4 Vue-router 实现传值&lt;/h3&gt;
&lt;p&gt;Vue-router 在跳转页面的时候，也可以携带数据过去&lt;/p&gt;
&lt;p&gt;有 2 种方式：&lt;/p&gt;
&lt;p&gt;第一种：path (路径)+query (查询参数)&lt;/p&gt;
&lt;p&gt;传递：router.push ({path: &#39;/study&#39;, query: { q1: msg1.value} })&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
&amp;lt;div&amp;gt;
  &amp;lt;h1&amp;gt;通过路径和查询参数进行传递&amp;lt;/h1&amp;gt;
  &amp;lt;input v-model=&amp;quot;msg1&amp;quot;&amp;gt;
  &amp;lt;button @click=&amp;quot;tz1&amp;quot;&amp;gt;跳转传参&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script setup&amp;gt;
import &amp;#123;ref&amp;#125; from &#39;vue&#39;;
import &amp;#123;useRouter&amp;#125; from &amp;quot;vue-router&amp;quot;;
const router=useRouter();
const msg1=ref(&amp;quot;&amp;quot;);
const tz1=()=&amp;gt;&amp;#123;
  //路由 跳转页面 传递参数 path+query
  router.push(&amp;#123; path: &#39;/study&#39;, query: &amp;#123; q1: msg1.value &amp;#125; &amp;#125;)
&amp;#125;
&amp;lt;/script&amp;gt;

&amp;lt;style scoped&amp;gt;

&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;获取：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;useRoute&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vue-router&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; route&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;useRoute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;query&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;swig￼&lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;h1&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;第二种：name (名称)+params (参数)&lt;/p&gt;
&lt;p&gt;路由注册的时候：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 2. 注册 设置对应 vue 组件的路径名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 通过 name+params 传值的需要，需要再路径后面：参数名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/study/:p1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;study&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token literal-property property&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; study &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;传递：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
&amp;lt;div&amp;gt;
  &amp;lt;label&amp;gt;要传的数据：&amp;lt;/label&amp;gt;&amp;lt;input v-model=&amp;quot;msg2&amp;quot;&amp;gt;
  &amp;lt;button @click=&amp;quot;tz2&amp;quot;&amp;gt;跳转传值通过参数&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script setup&amp;gt;
import &amp;#123;ref&amp;#125; from &#39;vue&#39;
import &amp;#123;useRouter&amp;#125; from &amp;quot;vue-router&amp;quot;;

const router=useRouter();

const msg2=ref(&amp;quot;&amp;quot;)

const tz2 = () =&amp;gt; &amp;#123;
  router.push(&amp;#123; name: &#39;study&#39;, params: &amp;#123; p1:msg2.value &amp;#125; &amp;#125;)
&amp;#125;
&amp;lt;/script&amp;gt;

&amp;lt;style scoped&amp;gt;

&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;获取：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!--标签 画页面--&amp;gt;
&amp;lt;template&amp;gt;
&amp;lt;div&amp;gt;
  &amp;lt;h1&amp;gt;学习vue3&amp;lt;/h1&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;h1&amp;gt;内容：&amp;#123;&amp;#123;str1&amp;#125;&amp;#125;&amp;lt;/h1&amp;gt;
    &amp;lt;button style=&amp;quot;font-size: 30px;color: red&amp;quot; @click=&amp;quot;show&amp;quot;&amp;gt;查看内容&amp;lt;/button&amp;gt;
    &amp;lt;div&amp;gt;
      &amp;lt;h1&amp;gt;接收路由携带数据&amp;lt;/h1&amp;gt;
      &amp;lt;h1&amp;gt;query:&amp;#123;&amp;#123;route.query.q1&amp;#125;&amp;#125;&amp;lt;/h1&amp;gt;
      &amp;lt;h1&amp;gt;params:&amp;#123;&amp;#123;route.params.p1&amp;#125;&amp;#125;&amp;lt;/h1&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;!--Vue3的写法 setup--&amp;gt;
&amp;lt;script setup&amp;gt;
//导入
import &amp;#123;ref&amp;#125; from &#39;vue&#39;
import &amp;#123;useRoute&amp;#125; from &#39;vue-router&#39;
const route=useRoute();

console.log(route.params)
//定义变量
const str1=ref(&amp;quot;醒醒……&amp;quot;);
//定义函数
const show=()=&amp;gt;&amp;#123;
  alert(str1.value);
&amp;#125;

&amp;lt;/script&amp;gt;

&amp;lt;style scoped&amp;gt;

&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;主要 vue3 中使用 name+params 进行传递参数，需要再注册路由的时候，通过传递的参数名，进行路径占位：path: &#39;/study/:p1&#39;&lt;/p&gt;
&lt;p&gt;其中 p1 就是要传递的参数名&lt;/p&gt;
&lt;h2 id=&#34;4-pinia&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-pinia&#34;&gt;#&lt;/a&gt; 4、Pinia&lt;/h2&gt;
&lt;h3 id=&#34;41-pinia概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#41-pinia概述&#34;&gt;#&lt;/a&gt; 4.1 Pinia 概述&lt;/h3&gt;
&lt;p&gt;Pinia 是 Vue 的存储库，实现全局变量的定义&lt;/p&gt;
&lt;p&gt;这里定义的变量信息，任何页面都可以使用，代替原来的 VueX&lt;/p&gt;
&lt;p&gt;官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9waW5pYS53ZWIzZG9jLnRvcC8=&#34;&gt;https://pinia.web3doc.top/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;42-pinia存储数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#42-pinia存储数据&#34;&gt;#&lt;/a&gt; 4.2 Pinia 存储数据&lt;/h3&gt;
&lt;p&gt;实现步骤：&lt;/p&gt;
&lt;p&gt;1. 依赖&lt;/p&gt;
&lt;p&gt;npm install pinia&lt;/p&gt;
&lt;p&gt;2. 实现配置&lt;/p&gt;
&lt;p&gt;在 main.js&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; createApp &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./style.css&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; App &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./App.vue&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 导入路由&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; createRouter &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./router/index.js&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 导入 pinia&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; createPinia &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;pinia&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 实例化 pinia&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; pinia &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;createPinia&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 配置路由、pinia&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;createApp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;App&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createRouter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pinia&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;#app&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3. 实现 js&lt;/p&gt;
&lt;p&gt;在 src 创建文件夹 pinia 内部创建 js 文件 index.js&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; defineStore &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;pinia&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; useStore &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;defineStore&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;store&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 定义需要共享的变量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token literal-property property&#34;&gt;author&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;邢&#39;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 定义全局变量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 定义方法  设置 state 中的值 set 方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;actions&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token function&#34;&gt;setAuthor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;author&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 定义函数 修饰变量的值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;author&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;4. 使用&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
&amp;lt;div&amp;gt;
  &amp;lt;h1&amp;gt;动态路由&amp;lt;/h1&amp;gt;
  &amp;lt;button @click=&amp;quot;tz&amp;quot;&amp;gt;点击跳转&amp;lt;/button&amp;gt;

  &amp;lt;div&amp;gt;
&amp;lt;!--    获取pinia中的值--&amp;gt;
    &amp;lt;h1&amp;gt;全局变量：&amp;#123;&amp;#123;store.author&amp;#125;&amp;#125;&amp;lt;/h1&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;h1&amp;gt;修改Pinia的值&amp;lt;/h1&amp;gt;
    &amp;lt;input v-model=&amp;quot;a&amp;quot;&amp;gt;
    &amp;lt;button @click=&amp;quot;set1&amp;quot;&amp;gt;修改作者&amp;lt;/button&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script setup&amp;gt;
// 导入
import &amp;#123;ref&amp;#125; from &#39;vue&#39;
import &amp;#123; useRouter &amp;#125; from &#39;vue-router&#39;
//导入
import &amp;#123;useStore&amp;#125; from &amp;quot;../pinia/index.js&amp;quot;;
// 声明变量
const router=useRouter()
// 声明 pinia
const store=useStore()
const tz=()=&amp;gt;&amp;#123;
  //基于路由 实现页面跳转 动态路由
  router.push(&amp;quot;/study&amp;quot;);
&amp;#125;

const a=ref(&amp;quot;&amp;quot;);

const set1 = () =&amp;gt; &amp;#123;
  //修改 pinia中的值
  store.setAuthor(a.value);
&amp;#125;
&amp;lt;/script&amp;gt;

&amp;lt;style scoped&amp;gt;

&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;获取：&lt;/p&gt;
&lt;p&gt;修改值：store.setAuthor (要修改的内容);&lt;/p&gt;
&lt;h3 id=&#34;43-pinia实现持久化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#43-pinia实现持久化&#34;&gt;#&lt;/a&gt; 4.3 Pinia 实现持久化&lt;/h3&gt;
&lt;p&gt;Pinia 默认数据存储在内存中，一旦刷新浏览器，数据就没有了，所以可以配置持久化&lt;/p&gt;
&lt;p&gt;持久化插件：pinia-plugin-persist&lt;/p&gt;
&lt;p&gt;实现步骤：&lt;/p&gt;
&lt;p&gt;1. 依赖&lt;/p&gt;
&lt;p&gt;npm install pinia-plugin-persist&lt;/p&gt;
&lt;p&gt;2. 实现配置&lt;/p&gt;
&lt;p&gt;在 main.js 中使用&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; createApp &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./style.css&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; App &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./App.vue&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 导入路由&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; createRouter &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./router/index.js&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 导入 pinia&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; createPinia &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;pinia&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 导入 pinia 持久化 插件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; piniaPersist &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;pinia-plugin-persist&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置 pinia 持久化&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; pinia &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;createPinia&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pinia&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;piniaPersist&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 配置路由、pinia&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;createApp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;App&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createRouter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pinia&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;#app&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3. 在 pinia 的 js 中开启持久化&lt;/p&gt;
&lt;p&gt;在 store/index.js 中&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; defineStore &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;pinia&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; useStore &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;defineStore&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;store&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 定义需要共享的变量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token literal-property property&#34;&gt;author&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;邢&#39;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 定义全局变量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 定义方法  设置 state 中的值 set 方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;actions&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token function&#34;&gt;setAuthor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;author&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 定义函数 修饰变量的值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;author&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;author&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;persist&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;//true 表示开启持久化保存&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;接下来再测试，发送刷新浏览器，数据仍存在&lt;/p&gt;
&lt;h2 id=&#34;5-vant组件库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-vant组件库&#34;&gt;#&lt;/a&gt; 5、Vant 组件库&lt;/h2&gt;
&lt;h2 id=&#34;6-axios&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-axios&#34;&gt;#&lt;/a&gt; 6、Axios&lt;/h2&gt;
&lt;h2 id=&#34;7-综合案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7-综合案例&#34;&gt;#&lt;/a&gt; 7、综合案例&lt;/h2&gt;
</content>
        <updated>2023-10-22T17:40:23.767Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/10/22/computer-science/cpp/course-1/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
        <title>hi biya</title>
        <link rel="alternate" href="http://example.com/2023/10/22/computer-science/cpp/course-1/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
        <content type="html">&lt;p&gt;hello world&lt;br /&gt;
 人生就是折腾，让自己忙起来&lt;br /&gt;
花开堪折直须折，莫待无花空折枝&lt;br /&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;通过-git-clone-命令将主题下载到-theme-目录&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#通过-git-clone-命令将主题下载到-theme-目录&#34;&gt;#&lt;/a&gt; 通过 git clone 命令将主题下载到 theme 目录&lt;/h1&gt;
&lt;p&gt;git clone &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21paWlrdS9oZXhvLXRoZW1lLWZsZXhibG9jay5naXQ=&#34;&gt;https://github.com/miiiku/hexo-theme-flexblock.git&lt;/span&gt; ./themes/flexblock&lt;/p&gt;
</content>
        <category term="docker" scheme="http://example.com/categories/docker/" />
        <category term="Linux" scheme="http://example.com/categories/docker/Linux/" />
        <category term="RabbitMQ" scheme="http://example.com/tags/RabbitMQ/" />
        <category term="Linux" scheme="http://example.com/tags/Linux/" />
        <updated>2023-10-21T16:09:40.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/10/22/Linux/docker/RabbitMQ/RabbitMQ/</id>
        <title>RabbitMQ</title>
        <link rel="alternate" href="http://example.com/2023/10/22/Linux/docker/RabbitMQ/RabbitMQ/"/>
        <content type="html">&lt;p&gt;RabbitMQ&lt;/p&gt;
&lt;p&gt;学会一下内容：&lt;/p&gt;
&lt;p&gt;1. 学会专业知识&lt;/p&gt;
&lt;p&gt;​	各种知识点：涵盖整个开发领域&lt;/p&gt;
&lt;p&gt;2. 学会适合自己的学习方式&lt;/p&gt;
&lt;p&gt;​	学习&lt;/p&gt;
&lt;p&gt;3. 学会解决问题&lt;/p&gt;
&lt;p&gt;​	debug、定位、分析&lt;/p&gt;
&lt;p&gt;4. 学会开发&lt;/p&gt;
&lt;p&gt;​	理解需求、学会沟通&lt;/p&gt;
&lt;p&gt;SpringCloud Alibaba&lt;/p&gt;
&lt;p&gt;注册中心：nacos  作用：管理服务，实现服务的注册与发现 使用：注解 @EnableDiscoveryClient + 配置 (application)&lt;/p&gt;
&lt;p&gt;配置中心：nacos 作用： 管理配置，实现配置的动态化管理，可以不用更改代码，实现不停机更新 使用：注解 @RefreshScope + 配置 (Nacos 配置管理 新建配置 Data ID 服务名一样)+ 配置 (Bootstrap)&lt;/p&gt;
&lt;p&gt;远程调用：OpenFeign 作用：调用服务，实现服务间通信 使用：注解 @EnableFeignClients+@FeignClient&lt;/p&gt;
&lt;p&gt;网关中心：gateway 作用：网关，实现服务的聚合统一接口，对请求过滤 使用：配置 + 接口 GlobalFilter&lt;/p&gt;
&lt;p&gt;流量控制：Sentinel 作用：流控和熔断降级，流控就是流量控制，防止高并发导致服务器压力过大，熔断降级就是对核心方法的一种保护，如果核心方法出现问题可以立即响应保证可用性 使用：配置 (Sentinel 可视化 流控、熔断)&lt;/p&gt;
&lt;p&gt;链路跟踪：Sleuth+Zipkin 作用：实现微服务下一次请求的完成过程的日志记录，实现服务间的调用关系 使用：配置&lt;/p&gt;
&lt;h2 id=&#34;一-mq&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-mq&#34;&gt;#&lt;/a&gt; 一、MQ&lt;/h2&gt;
&lt;h3 id=&#34;11-mq&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-mq&#34;&gt;#&lt;/a&gt; 1.1 MQ&lt;/h3&gt;
&lt;h3 id=&#34;12-rabbitmq&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-rabbitmq&#34;&gt;#&lt;/a&gt; 1.2 RabbitMQ&lt;/h3&gt;
&lt;p&gt;都可以使用这个服务器：&lt;/p&gt;
&lt;p&gt;110.40.192.129&lt;/p&gt;
&lt;p&gt;端口号：可视化页面：15672 代码中 5672&lt;/p&gt;
&lt;p&gt;账号：guest&lt;/p&gt;
&lt;p&gt;密码：guest&lt;/p&gt;
&lt;h3 id=&#34;13-初体验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-初体验&#34;&gt;#&lt;/a&gt; 1.3 初体验&lt;/h3&gt;
&lt;p&gt;1. 依赖 jar&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!--        RabbitMQ --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org.springframework.boot&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring-boot-starter-amqp&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2. 实现配置&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;spring&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;rabbitmq&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 110.40.192.129&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5672&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; guest&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; guest&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3. 编写代码&lt;/p&gt;
&lt;p&gt;​	创建队列&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Configuration&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 配置 类似 beans 标签&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RabbitMQConfig&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 创建队列&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Bean&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// IOC bean 标签&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Queue&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;createQ1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Queue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;j2310-lx&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	消息发送&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;@RestController
public class MqSendController &amp;#123;
    @Resource
    private RabbitTemplate template;

    @GetMapping(&amp;quot;send1&amp;quot;)
    public String send1(String msg)&amp;#123;
        //发送消息
        template.convertAndSend(&amp;quot;&amp;quot;,&amp;quot;j2310-lx&amp;quot;,msg);
        return &amp;quot;OK&amp;quot;;
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​	消息接收&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;@Slf4j
@Component //IOC
public class MsgListener &amp;#123;
    @RabbitListener(queues = &amp;quot;j2310-lx&amp;quot;)
    public void hander(String msg)&amp;#123;
        log.info(&amp;quot;消费者获取消息&amp;#123;&amp;#125;&amp;quot;,msg);
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;4. 运行测试&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/RabbitMQ.assets/image-20231013114715480.png&#34; alt=&#34;image-20231013114715480&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;RabbitMQ.assets/image-20231013114726677.png&#34; alt=&#34;image-20231013114726677&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;二-rabbitmq核心&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-rabbitmq核心&#34;&gt;#&lt;/a&gt; 二、RabbitMQ 核心&lt;/h2&gt;
&lt;h3 id=&#34;21-消息模式-简单消息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-消息模式-简单消息&#34;&gt;#&lt;/a&gt; 2.1 消息模式 - 简单消息&lt;/h3&gt;
&lt;p&gt;简单消息：&lt;/p&gt;
&lt;p&gt;特点：一个队列对应一个消费端，一个消息只能被消费 1 次&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/RabbitMQ.assets/image-20231013141827735.png&#34; alt=&#34;image-20231013141827735&#34; /&gt;&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;1. 定义队列&lt;/p&gt;
&lt;p&gt;2. 发送消息 --- 到 --- 队列中&lt;/p&gt;
&lt;p&gt;3. 监听消息 --- 从 --- 队列中&lt;/p&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;//简单消息
@Bean // IOC bean标签
public Queue createQ2()&amp;#123;
    return new Queue(&amp;quot;lx-p2p-1&amp;quot;);
&amp;#125;

@Resource
private RabbitTemplate template;
@GetMapping(&amp;quot;send2&amp;quot;)
public String send2(String msg)&amp;#123;
        //发送消息
        template.convertAndSend(&amp;quot;&amp;quot;,&amp;quot;lx-p2p-1&amp;quot;,msg);
        return &amp;quot;OK&amp;quot;;
&amp;#125;
 
    @RabbitListener(queues = &amp;quot;lx-p2p-1&amp;quot;)
    public void hander2(String msg)&amp;#123;
        log.info(&amp;quot;普通消息，消费者，获取消息，&amp;#123;&amp;#125;&amp;quot;,msg);
    &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;22-消息模式-work消息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-消息模式-work消息&#34;&gt;#&lt;/a&gt; 2.2 消息模式 - Work 消息&lt;/h3&gt;
&lt;p&gt;Work 消息：一个队列可以有多个消费端，1 个消息只能消费 1 次，多个消费者是按照轮询的形式轮流获取消息&lt;/p&gt;
&lt;p&gt;可以解决：消息堆积（发的快，消费的慢）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;RabbitMQ.assets/image-20231013141853817.png&#34; alt=&#34;image-20231013141853817&#34; /&gt;&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;//Work消息
@Bean // IOC bean标签
public Queue createQ3()&amp;#123;
    return new Queue(&amp;quot;lx-work-1&amp;quot;);
&amp;#125;

@Resource
    private RabbitTemplate template;
    @GetMapping(&amp;quot;send3&amp;quot;)
    public String send3(String msg)&amp;#123;
        //发送消息
        template.convertAndSend(&amp;quot;&amp;quot;,&amp;quot;lx-work-1&amp;quot;,msg);
        return &amp;quot;OK&amp;quot;;
    &amp;#125;
@RabbitListener(queues = &amp;quot;lx-work-1&amp;quot;)
    public void hander3(String msg)&amp;#123;
        log.info(&amp;quot;Work消息，消费者01，获取消息：&amp;#123;&amp;#125;&amp;quot;,msg);
    &amp;#125;
    @RabbitListener(queues = &amp;quot;lx-work-1&amp;quot;)
    public void hander4(String msg)&amp;#123;
        log.info(&amp;quot;Work消息，消费者02，获取消息：&amp;#123;&amp;#125;&amp;quot;,msg);
    &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;23消息模式-发布订阅&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23消息模式-发布订阅&#34;&gt;#&lt;/a&gt; 2.3. 消息模式 - 发布订阅&lt;/h3&gt;
&lt;p&gt;发布订阅：就是消息发送到 Exchange (交换器)，交换器再把消息发送到交换器绑定的队列上，1 个消息可以给多个消费者（多个队列中）获取&lt;/p&gt;
&lt;p&gt;Exchange: 交换器，是 RabbitMQ 一个组成，可以接收消息，然后根据交换器的类型，选择对应的匹配模式，把匹配到的消息转发到对应的队列中。&lt;/p&gt;
&lt;p&gt;交换器的类型：&lt;/p&gt;
&lt;p&gt;1.fanout 直接转发，不对消息做匹配处理&lt;/p&gt;
&lt;p&gt;2.direct 路由匹配，发送消息指定 RoutingKey (精确)，交换器绑定队列的时候，也需要指定 RoutingKey&lt;/p&gt;
&lt;p&gt;3.topic  路由匹配，发送消息指定 RoutingKey (模糊，支持 * #)，交换器绑定队列的时候，也需要指定 RoutingKey，* 一个单词 #任意个单词&lt;/p&gt;
&lt;p&gt;4.header 消息头匹配模式，发送消息的时候指定消息的请求消息头，交换器绑定队列的时候，也需要指定对应的请求消息头，any 任意一个 all 所有&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/RabbitMQ.assets/image-20231013141938699.png&#34; alt=&#34;image-20231013141938699&#34; /&gt;&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;1. 创建队列&lt;/p&gt;
&lt;p&gt;2. 创建交换器&lt;/p&gt;
&lt;p&gt;3. 创建交换器和队列的绑定&lt;/p&gt;
&lt;p&gt;4. 发送消息&lt;/p&gt;
&lt;p&gt;5. 监听消息&lt;/p&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;@Configuration
public class FanoutConfig &amp;#123;
    //1创建队列
    @Bean
    public Queue createQfanout1()&amp;#123;
        return new Queue(&amp;quot;q-fanout-01&amp;quot;);
    &amp;#125;
    @Bean
    public Queue createQfanout2()&amp;#123;
        return new Queue(&amp;quot;q-fanout-02&amp;quot;);
    &amp;#125;
    //2.创建交换器
    @Bean
    public FanoutExchange createFe()&amp;#123;
        return new FanoutExchange(&amp;quot;ex-fanout-lx&amp;quot;);
    &amp;#125;
    //3.实现绑定
    @Bean
    public Binding createBf1(FanoutExchange fe)&amp;#123;
        return  BindingBuilder.bind(createQfanout1()).to(fe);
    &amp;#125;
    @Bean
    public Binding createBf2(FanoutExchange fe)&amp;#123;
        return  BindingBuilder.bind(createQfanout2()).to(fe);
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;@RestController
public class FanoutController &amp;#123;
    @Resource
    private RabbitTemplate template;

    @GetMapping(&amp;quot;fanout1&amp;quot;)
    public String f1(String msg)&amp;#123;
        template.convertAndSend(&amp;quot;ex-fanout-lx&amp;quot;,&amp;quot;&amp;quot;,msg);
        return &amp;quot;ok&amp;quot;;
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;@RabbitListener(queues = &amp;quot;q-fanout-01&amp;quot;)
public void hander5(String msg)&amp;#123;
    log.info(&amp;quot;fanout消息，01队列，消费者，获取消息：&amp;#123;&amp;#125;&amp;quot;,msg);
&amp;#125;
@RabbitListener(queues = &amp;quot;q-fanout-02&amp;quot;)
public void hander6(String msg)&amp;#123;
    log.info(&amp;quot;fanout消息，02队列，消费者02，获取消息：&amp;#123;&amp;#125;&amp;quot;,msg);
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;RabbitMQ.assets/image-20231013150514443.png&#34; alt=&#34;image-20231013150514443&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;24-消息模式-路由匹配&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#24-消息模式-路由匹配&#34;&gt;#&lt;/a&gt; 2.4 消息模式 - 路由匹配&lt;/h3&gt;
&lt;p&gt;路由消息：消息被发送到交换器，交换器的类型为 direct，可以根据消息的路由关键字进行匹配，转发到匹配的所有的队列&lt;/p&gt;
&lt;p&gt;RoutingKey: 路由关键字，只支持精确的值&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;RabbitMQ.assets/image-20231013142052195.png&#34; alt=&#34;image-20231013142052195&#34; /&gt;&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;1. 创建队列&lt;/p&gt;
&lt;p&gt;2. 创建交换器 direct&lt;/p&gt;
&lt;p&gt;3. 创建交换器和队列的绑定 指定 RK&lt;/p&gt;
&lt;p&gt;4. 发送消息 指定 RK&lt;/p&gt;
&lt;p&gt;5. 监听消息&lt;/p&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;@Configuration
public class DirectConfig &amp;#123;
    //1创建队列
    @Bean
    public Queue createQdirect1()&amp;#123;
        return new Queue(&amp;quot;q-direct-01&amp;quot;);
    &amp;#125;
    @Bean
    public Queue createQdirect2()&amp;#123;
        return new Queue(&amp;quot;q-direct-02&amp;quot;);
    &amp;#125;
    @Bean
    public Queue createQdirect3()&amp;#123;
        return new Queue(&amp;quot;q-direct-03&amp;quot;);
    &amp;#125;
    //2.创建交换器
    @Bean
    public DirectExchange createDe()&amp;#123;
        return new DirectExchange(&amp;quot;ex-direct-lx&amp;quot;);
    &amp;#125;
    //3.实现绑定
    @Bean
    public Binding createBd1(DirectExchange fe)&amp;#123;
        return  BindingBuilder.bind(createQdirect1()).to(fe).with(&amp;quot;error&amp;quot;);
    &amp;#125;
    @Bean
    public Binding createBd2(DirectExchange fe)&amp;#123;
        return  BindingBuilder.bind(createQdirect2()).to(fe).with(&amp;quot;info&amp;quot;);
    &amp;#125;
    @Bean
    public Binding createBd3(DirectExchange fe)&amp;#123;
        return  BindingBuilder.bind(createQdirect3()).to(fe).with(&amp;quot;info&amp;quot;);
    &amp;#125;

&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;@GetMapping(&amp;quot;direct1&amp;quot;)
public String d1(String msg,String type)&amp;#123;
    template.convertAndSend(&amp;quot;ex-direct-lx&amp;quot;,type,msg);
    return &amp;quot;ok&amp;quot;;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;RabbitMQ.assets/image-20231013162331523.png&#34; alt=&#34;image-20231013162331523&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;25-消息模式-主题消息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#25-消息模式-主题消息&#34;&gt;#&lt;/a&gt; 2.5 消息模式 - 主题消息&lt;/h3&gt;
&lt;p&gt;主题消息，就是交换器的类型为 Topic, 跟路由模式的消息一样，都是通过 RoutingKey 匹配队列&lt;/p&gt;
&lt;p&gt;区别：&lt;/p&gt;
&lt;p&gt;主题消息 的 RK 支持模糊&lt;/p&gt;
&lt;p&gt;特殊符号： 区分单词是通过。区分的&lt;/p&gt;
&lt;p&gt;* 一个单词，单词内容任意&lt;/p&gt;
&lt;p&gt;#任意个单词，单词内容任意&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;RabbitMQ.assets/image-20231013142127724.png&#34; alt=&#34;image-20231013142127724&#34; /&gt;&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;1. 创建队列&lt;/p&gt;
&lt;p&gt;2. 创建交换器 topic&lt;/p&gt;
&lt;p&gt;3. 创建交换器和队列的绑定 指定 RK (支持模糊)&lt;/p&gt;
&lt;p&gt;4. 发送消息 指定 RK&lt;/p&gt;
&lt;p&gt;5. 监听消息&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;@Configuration
public class TopicConfig &amp;#123;
    //1创建队列
    @Bean
    public Queue createQtopic1()&amp;#123;
        return new Queue(&amp;quot;q-topic-01&amp;quot;);
    &amp;#125;
    @Bean
    public Queue createQtopic2()&amp;#123;
        return new Queue(&amp;quot;q-topic-02&amp;quot;);
    &amp;#125;
    //2.创建交换器
    @Bean
    public TopicExchange createTe()&amp;#123;
        return new TopicExchange(&amp;quot;ex-topic-lx&amp;quot;);
    &amp;#125;
    //3.实现绑定
    @Bean
    public Binding createBt1(TopicExchange fe)&amp;#123;
        //* 一个单词
        return  BindingBuilder.bind(createQtopic1()).to(fe).with(&amp;quot;error.*&amp;quot;);
    &amp;#125;
    @Bean
    public Binding createBt2(TopicExchange fe)&amp;#123;
        //# 任意个单词 0-多个
        return  BindingBuilder.bind(createQtopic2()).to(fe).with(&amp;quot;info.#&amp;quot;);
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;@RestController
public class TopicController &amp;#123;
    @Resource
    private RabbitTemplate template;

    @GetMapping(&amp;quot;topic1&amp;quot;)
    public String f1(String msg,String rk)&amp;#123;
        template.convertAndSend(&amp;quot;ex-topic-lx&amp;quot;,rk,msg);
        return &amp;quot;ok&amp;quot;;
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;RabbitMQ.assets/image-20231013164017687.png&#34; alt=&#34;image-20231013164017687&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;26-死信延迟消息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#26-死信延迟消息&#34;&gt;#&lt;/a&gt; 2.6 死信 + 延迟消息&lt;/h3&gt;
&lt;p&gt;死信：RabbitMQ 的队列中的消息，满足以下条件任意其一，就会成为死信消息&lt;/p&gt;
&lt;p&gt;​			1. 消息被拒绝&lt;/p&gt;
&lt;p&gt;​			2. 消息过期&lt;/p&gt;
&lt;p&gt;​			3. 队列已满&lt;/p&gt;
&lt;p&gt;死信交换器：专门用来转发队列中的死信消息，将死信消息转发到指定的队列中&lt;/p&gt;
&lt;p&gt;我们可以通过死信 + 死信交换器实现延迟消息处理&lt;/p&gt;
&lt;p&gt;RabbitMQ 实现延迟消息处理🈶2 种方式：&lt;/p&gt;
&lt;p&gt;1. 死信 + 死信交换器 代码实现&lt;/p&gt;
&lt;p&gt;2. 延迟消息插件&lt;/p&gt;
&lt;p&gt;RabbitMQ 基于死信和死信交换器实现延迟：&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;RabbitMQ.assets/image-20231016113011364.png&amp;quot; alt=&amp;quot;image-20231016113011364&amp;quot; style=&amp;quot;zoom:67%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;1. 定义需要的队列、交换器、绑定&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;@Configuration
public class RabbitMQConfig &amp;#123;
    //1.创建2个队列
    @Bean
    public Queue createQ1()&amp;#123;
        //1.设置队列 内部消息有效期 设置死信交换器 设置RK
        Map&amp;lt;String,Object&amp;gt; params=new HashMap&amp;lt;&amp;gt;();
        //设置队列中每个消息的有效期 单位 毫秒
        params.put(&amp;quot;x-message-ttl&amp;quot;,3000);
        //设置对应的死信交换器
        params.put(&amp;quot;x-dead-letter-exchange&amp;quot;,&amp;quot;dead-ex-lx&amp;quot;);
        //设置交换器匹配的路由名称
        params.put(&amp;quot;x-dead-letter-routing-key&amp;quot;,&amp;quot;test&amp;quot;);
        return QueueBuilder.durable(&amp;quot;dl-q01&amp;quot;).withArguments(params).build();
    &amp;#125;
    @Bean
    public Queue createQ2()&amp;#123;
        return new Queue(&amp;quot;dl-q02&amp;quot;);
    &amp;#125;
    //2.创建1个交换器（1.fanout 2.direct 3.topic 4.header）-死信交换器direct类型
    @Bean
    public DirectExchange createDe()&amp;#123;
        return new DirectExchange(&amp;quot;dead-ex-lx&amp;quot;);
    &amp;#125;
    //3.创建1个绑定
    @Bean
    public Binding createBd1(DirectExchange de)&amp;#123;
        return BindingBuilder.bind(createQ2()).to(de).with(&amp;quot;test&amp;quot;);
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2. 发送消息 消息给到第一个队列&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;@RestController
@RequestMapping(&amp;quot;/api/mq/&amp;quot;)
public class DeadController &amp;#123;
    @Resource
    private RabbitTemplate template;

    @GetMapping(&amp;quot;send&amp;quot;)
    public String sendDead(String msg)&amp;#123;
        System.err.println(&amp;quot;发送消息，&amp;quot;+msg+&amp;quot;，发送时间：&amp;quot;+System.currentTimeMillis());
        template.convertAndSend(&amp;quot;&amp;quot;,&amp;quot;dl-q01&amp;quot;,msg);
        return &amp;quot;OK&amp;quot;;
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3. 监听消息 消费 监听第二个队列&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;@Component
public class DeadListener &amp;#123;

    @RabbitListener(queues = &amp;quot;dl-q02&amp;quot;)
    public void hanlder(String m)&amp;#123;
        System.err.println(&amp;quot;延迟消息，&amp;quot;+m+&amp;quot;，接收时间：&amp;quot;+System.currentTimeMillis());
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;4. 运行测试&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/RabbitMQ.assets/image-20231016112942920.png&#34; alt=&#34;image-20231016112942920&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;扩展&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#扩展&#34;&gt;#&lt;/a&gt; 扩展&lt;/h2&gt;
&lt;h3 id=&#34;1任务调度框架&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1任务调度框架&#34;&gt;#&lt;/a&gt; 1. 任务调度框架&lt;/h3&gt;
&lt;p&gt;Java 中如何实现定时任务？&lt;/p&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;p&gt;1. 每天早上 6 点定时执行&lt;/p&gt;
&lt;p&gt;2. 每月最后一个工作日，考勤统计&lt;/p&gt;
&lt;p&gt;3. 每个月 25 号信用卡还款&lt;/p&gt;
&lt;p&gt;4. 会员生日祝福&lt;/p&gt;
&lt;p&gt;5. 每隔 3 秒，自动提醒&lt;/p&gt;
&lt;p&gt;我们可以通过任务调度框架实现上述的需求&lt;/p&gt;
&lt;p&gt;任务调度框架：可以实现定时任务，实现间隔多少时间的重复执行，实现指定日期的重复执行&lt;/p&gt;
&lt;p&gt;Java 中任务调度框架：&lt;/p&gt;
&lt;p&gt;1.Spring Task&lt;/p&gt;
&lt;p&gt;2.Quartz&lt;/p&gt;
&lt;p&gt;3.XXL-Job&lt;/p&gt;
&lt;p&gt;4. 第三云平台：阿里云 - SchedulerX 等等&lt;/p&gt;
&lt;p&gt;选择一个：Spring Task（Spring Scheduled）&lt;/p&gt;
&lt;p&gt;2 个注解 + 1 个表达式&lt;/p&gt;
&lt;p&gt;使用步骤：&lt;/p&gt;
&lt;p&gt;1. 开关类 使用注解&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@SpringBootApplication&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@EnableScheduling&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 开启任务调度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SpringTask01Application&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;SpringApplication&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringTask01Application&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;2. 定义任务 - 重复执行&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;@Component
public class HelloTask &amp;#123;
    //定时任务，需要重复执行的方法，并设置触发的规则
    //每隔3秒，重复执行
    //CRON表达式 就是设置定时任务的时间关系的特殊的字符串
    //语法格式：秒 分 时 日 月 星期几 年 其中，只有年可以省略
    @Scheduled(cron = &amp;quot;0/3 * * * * ?&amp;quot;)
    public void task1()&amp;#123;
        System.err.println(&amp;quot;每隔3秒，查看同桌状态！&amp;quot;+System.currentTimeMillis());
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3. 运行查看效果&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;RabbitMQ.assets/image-20231016101548712.png&#34; alt=&#34;image-20231016101548712&#34; /&gt;&lt;/p&gt;
&lt;p&gt;CRON 表达式：特殊字符串，主要用来描述时间的，用于任务调度等&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;RabbitMQ.assets/image-20231016102801441.png&#34; alt=&#34;image-20231016102801441&#34; /&gt;&lt;/p&gt;
&lt;p&gt;每一个域都使用数字，但还可以出现如下特殊字符，它们的含义是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（1）* ：表示匹配该域的任意值。假如在 Minutes 域使用 *，即表示每分钟都会触发事件。&lt;/p&gt;
&lt;p&gt;（2）?：只能用在 DayofMonth 和 DayofWeek 两个域。它也匹配域的任意值，但实际不会。因为 DayofMonth 和 DayofWeek 会相互影响。&lt;/p&gt;
&lt;p&gt;例如：想在每月的 20 日触发调度，不管 20 日到底是星期几，则只能使用如下写法： 13 13 15 20 * ?，其中最后一位只能用？，而不能使用 *，如果使用 * 表示不管星期几都会触发，实际上并不是这样。&lt;/p&gt;
&lt;p&gt;（3）-：表示范围。例如在 Minutes 域使用 5-20，表示从 5 分到 20 分钟每分钟触发一次&lt;/p&gt;
&lt;p&gt;（4）/：表示起始时间开始触发，然后每隔固定时间触发一次。例如在 Minutes 域使用 5/20，则意味着 5 分钟触发一次，而 25，45 等分别触发一次.。&lt;/p&gt;
&lt;p&gt;（5）,：表示列出枚举值。例如：在 Minutes 域使用 5,20，则意味着在 5 和 20 分每分钟触发一次。&lt;/p&gt;
&lt;p&gt;（6）L：表示最后，只能出现在 DayofWeek 和 DayofMonth 域。如果在 DayofWeek 域使用 5L，意味着在最后的一个星期四触发。&lt;/p&gt;
&lt;p&gt;（7）W：表示有效工作日 (周一到周五)，只能出现在 DayofMonth 域，系统将在离指定日期的最近的有效工作日触发事件。&lt;/p&gt;
&lt;p&gt;例如：在 DayofMonth 使用 5W，如果 5 日是星期六，则将在最近的工作日：星期五，即 4 日触发。如果 5 日是星期天，则在 6 日 (周一) 触发；如果 5 日在星期一到星期五中的一天，则就在 5 日触发。另外一点，W 的最近寻找不会跨过月份 。&lt;/p&gt;
&lt;p&gt;（8）LW：这两个字符可以连用，表示在某个月最后一个工作日。&lt;/p&gt;
&lt;p&gt;（9）#：用于确定每个月第几个星期几，只能出现在 DayofWeek 域。例如在 4#2，表示某月的第二个星期三。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jcm9uLnFxZTIuY29tLw==&#34;&gt;https://cron.qqe2.com/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;RabbitMQ.assets/image-20231016103550581.png&#34; alt=&#34;image-20231016103550581&#34; /&gt;&lt;/p&gt;
</content>
        <category term="docker" scheme="http://example.com/categories/docker/" />
        <category term="Linux" scheme="http://example.com/categories/docker/Linux/" />
        <category term="RabbitMQ" scheme="http://example.com/tags/RabbitMQ/" />
        <category term="Linux" scheme="http://example.com/tags/Linux/" />
        <updated>2023-10-21T16:09:40.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/10/22/Linux/docker/docker/4-01Docker/</id>
        <title>docker</title>
        <link rel="alternate" href="http://example.com/2023/10/22/Linux/docker/docker/4-01Docker/"/>
        <content type="html">&lt;h1 id=&#34;docker-随堂笔记&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#docker-随堂笔记&#34;&gt;#&lt;/a&gt; Docker - 随堂笔记&lt;/h1&gt;
&lt;p&gt;学习解决方案：&lt;/p&gt;
&lt;p&gt;第一种方案：知识点 + 教学项目 + 团队项目&lt;/p&gt;
&lt;p&gt;SSM+Vue（全家桶）&lt;/p&gt;
&lt;p&gt;传统项目&lt;/p&gt;
&lt;p&gt;第二种方案：&lt;/p&gt;
&lt;p&gt;SpringBoot+Vue（全家桶）&lt;/p&gt;
&lt;p&gt;主流，前后端分离&lt;/p&gt;
&lt;p&gt;第三种方案：&lt;/p&gt;
&lt;p&gt;基于低代码开发平台（第三方成品）二次开发&lt;/p&gt;
&lt;p&gt;基于 Guns 进行二次开发&lt;/p&gt;
&lt;p&gt;第四种方案：&lt;/p&gt;
&lt;p&gt;SpringCloud&lt;/p&gt;
&lt;p&gt;微服务架构，复杂业务、聚合、并发&lt;/p&gt;
&lt;p&gt;第一个项目：&lt;/p&gt;
&lt;p&gt;1. 把近期所学的内容，完成了整合：SSM,Vue 这套&lt;/p&gt;
&lt;p&gt;2. 学会 Git，多人协作开发&lt;/p&gt;
&lt;p&gt;3. 解决问题的能力，常见问题&lt;/p&gt;
&lt;p&gt;4. 淬炼学习能力&lt;/p&gt;
&lt;p&gt;第二个项目：&lt;/p&gt;
&lt;p&gt;1. 业务逻辑&lt;/p&gt;
&lt;p&gt;2. 第三方（需要自主研究）&lt;/p&gt;
&lt;p&gt;3. 技术栈升级&lt;/p&gt;
&lt;p&gt;第三个项目：&lt;/p&gt;
&lt;p&gt;1. 二次开发 --- 效率&lt;/p&gt;
&lt;h2 id=&#34;一-docker&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-docker&#34;&gt;#&lt;/a&gt; 一、Docker&lt;/h2&gt;
&lt;h3 id=&#34;11-docker&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-docker&#34;&gt;#&lt;/a&gt; 1.1 Docker&lt;/h3&gt;
&lt;p&gt;Docker 是一个开源的容器引擎，可以轻松的为任何应用创建一个轻量级的、可移植的、自给自足的容器。&lt;/p&gt;
&lt;p&gt;容器化引擎，新型虚拟机&lt;/p&gt;
&lt;p&gt;Docker 使用 Google 公司推出的 Go 语言进行开发实现，属于操作系统层面的虚拟化技术。&lt;/p&gt;
&lt;p&gt;由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。&lt;/p&gt;
&lt;p&gt;用户可以方便地创建和使用容器，把自己的应用放入容器。&lt;/p&gt;
&lt;p&gt;容器还可以进行版本管理、复制、分享、修改，就像管理普通的代码一样。&lt;/p&gt;
&lt;p&gt;容器就是将软件打包成标准化单元，以用于开发、交付和部署。&lt;/p&gt;
&lt;p&gt;容器的镜像是轻量的、可执行的独立软件包 ，包含软件运行所需的所有内容：代码、运行时环境、系统工具、系统库和设置。&lt;/p&gt;
&lt;h3 id=&#34;12-docker的特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-docker的特点&#34;&gt;#&lt;/a&gt; 1.2 Docker 的特点&lt;/h3&gt;
&lt;p&gt;轻量，在一台机器上运行的多个 Docker 容器可以共享这台机器的操作系统内核；它们能够迅速启动，只需占用很少的计算和内存资源。镜像是通过文件系统层进行构造的，并共享一些公共文件。这样就能尽量降低磁盘用量，并能更快地下载镜像。&lt;/p&gt;
&lt;p&gt;标准，Docker 容器基于开放式标准，能够在所有主流 Linux 版本、Microsoft Windows 以及包括 VM、裸机服务器和云在内的任何基础设施上运行。&lt;/p&gt;
&lt;p&gt;安全，Docker 赋予应用的隔离性不仅限于彼此隔离，还独立于底层的基础设施。Docker 默认提供最强的隔离，因此应用出现问题，也只是单个容器的问题，而不会波及到整台机器。&lt;/p&gt;
&lt;h3 id=&#34;13-docker的组成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-docker的组成&#34;&gt;#&lt;/a&gt; 1.3 Docker 的组成&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303100947243.png&#34; alt=&#34;image-20230310094755104&#34; /&gt;&lt;/p&gt;
&lt;p&gt;镜像（ Image ）   软件安装包，是一套软件集合，需要的其他的软件都在里面，比如 Tomcat 镜像，就包含 Jdk+tomcat&lt;/p&gt;
&lt;p&gt;容器（ Container ）基于镜像安装之后的实例&lt;/p&gt;
&lt;p&gt;数据卷（Data Volumes）容器存储数据的地方，类似磁盘（虚拟的）&lt;/p&gt;
&lt;p&gt;网络（Network）可以实现容器的网络分配，每个容器都有自己的网络（ip + 端口）&lt;/p&gt;
&lt;p&gt;仓库（ Repository ）存储镜像的地方，国内建议使用第三方镜像仓库&lt;/p&gt;
&lt;h3 id=&#34;14-docker安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#14-docker安装&#34;&gt;#&lt;/a&gt; 1.4 Docker 安装&lt;/h3&gt;
&lt;p&gt;执行命令，先查看是否有 Docker&lt;/p&gt;
&lt;p&gt;docker --version&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303100952267.png&#34; alt=&#34;image-20230310095223175&#34; /&gt;&lt;/p&gt;
&lt;p&gt;如果想要删除：yum -y remove docker-ce&lt;/p&gt;
&lt;p&gt;如果没有需要安装：&lt;/p&gt;
&lt;p&gt;1. 执行命令，实现 Docker 安装&lt;/p&gt;
&lt;p&gt;yum install -y yum-utils&lt;/p&gt;
&lt;p&gt;yum-config-manager --add-repo &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS9kb2NrZXItY2UvbGludXgvY2VudG9zL2RvY2tlci1jZS5yZXBv&#34;&gt;http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;yum makecache fast&lt;/p&gt;
&lt;p&gt;yum -y install docker-ce&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101001414.png&#34; alt=&#34;image-20230310100129361&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101001317.png&#34; alt=&#34;image-20230310100151294&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2. 验证&lt;/p&gt;
&lt;p&gt;docker --version&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101003454.png&#34; alt=&#34;image-20230310100313385&#34; /&gt;&lt;/p&gt;
&lt;p&gt;3. 启动 Docker&lt;/p&gt;
&lt;p&gt;启动：systemctl start docker&lt;/p&gt;
&lt;p&gt;停止：systemctl stop docker&lt;/p&gt;
&lt;p&gt;查看状态：systemctl status docker&lt;/p&gt;
&lt;p&gt;重启：systemctl restart docker&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101005820.png&#34; alt=&#34;image-20230310100525763&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;二-docker命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-docker命令&#34;&gt;#&lt;/a&gt; 二、Docker 命令&lt;/h2&gt;
&lt;h3 id=&#34;21-docker镜像仓库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-docker镜像仓库&#34;&gt;#&lt;/a&gt; 2.1 Docker 镜像仓库&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101006184.png&#34; alt=&#34;image-20230310100605142&#34; /&gt;&lt;/p&gt;
&lt;p&gt;需要配置镜像加速器：&lt;/p&gt;
&lt;p&gt;1. 执行命令，编辑文件&lt;/p&gt;
&lt;p&gt;vi /etc/docker/daemon.json&lt;/p&gt;
&lt;p&gt;2. 输入一下内容，并保存退出&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;&#34;registry-mirrors&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;https://registry.docker-cn.com&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3. 执行命令，让配置生效&lt;/p&gt;
&lt;p&gt;systemctl daemon-reload&lt;br /&gt;
systemctl restart docker&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101009704.png&#34; alt=&#34;image-20230310100921628&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;22-docker常用命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-docker常用命令&#34;&gt;#&lt;/a&gt; 2.2 Docker 常用命令&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1. 搜索镜像：docker search&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;docker search tomcat&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101048640.png&#34; alt=&#34;image-20230310104844611&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 查看本地镜像：docker images&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;docker images&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101049042.png&#34; alt=&#34;image-20230310104937000&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 下载镜像：docker pull&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;docker pull tomcat&lt;/p&gt;
&lt;p&gt;docker pull mysql:8.0&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101047385.png&#34; alt=&#34;image-20230310104750289&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101050489.png&#34; alt=&#34;image-20230310105057432&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. 创建容器：docker create&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;docker create --name tomcat8081 -p 8081:8080 tomcat&lt;/p&gt;
&lt;p&gt;参数说明：&lt;/p&gt;
&lt;p&gt;1.--name 为容器起个名字&lt;/p&gt;
&lt;p&gt;2.-p 设置端口号 访问端口号：软件本身的端口号&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101054894.png&#34; alt=&#34;image-20230310105418847&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 创建并运行容器：docker run&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;docker run -d --name tomcat8082 -p 8082:8080 tomcat&lt;/p&gt;
&lt;p&gt;参数说明：&lt;/p&gt;
&lt;p&gt;1.-d 后台启动&lt;/p&gt;
&lt;p&gt;2.--name 为容器起个名字&lt;/p&gt;
&lt;p&gt;3.-p 设置端口号 访问端口号：软件本身的端口号&lt;/p&gt;
&lt;p&gt;run 命令：1. 镜像不存在，会自动下载 2. 创建容器 3. 启动容器&lt;/p&gt;
&lt;p&gt;等价于：pull+create+start 命令组合&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101059021.png&#34; alt=&#34;image-20230310105944985&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 启动容器：docker start&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;docker start tomcat8081&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101100596.png&#34; alt=&#34;image-20230310110042546&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 停止容器：docker stop&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;docker stop tomcat8081&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101100467.png&#34; alt=&#34;image-20230310110018425&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 删除容器：docker rm&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;docker rm tomcat8081&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注意：删除容器，容器必须先停止&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101102238.png&#34; alt=&#34;image-20230310110228205&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9. 查看容器：docker ps&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;docker ps -a 查看创建的所有的容器&lt;/p&gt;
&lt;p&gt;docker ps 查看运行中的容器&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101056623.png&#34; alt=&#34;image-20230310105626567&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10. 删除镜像：docker rmi&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;docker rmi tomcat:8.5&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101109031.png&#34; alt=&#34;image-20230310110947965&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;11. 查看容器日志：docker logs&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;docker logs tomcat8082&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101103616.png&#34; alt=&#34;image-20230310110314580&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;12. 进入到容器内部：docker exec&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;docker exec -it tomcat8082 bash&lt;/p&gt;
&lt;p&gt;参数说明：&lt;/p&gt;
&lt;p&gt;1.-it 交互&lt;/p&gt;
&lt;p&gt;2.bash 命令&lt;/p&gt;
&lt;p&gt;退出容器，采用 exit&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101105264.png&#34; alt=&#34;image-20230310110510207&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;13. 查看容器详情：docker inspect&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;docker inspect tomcat8082&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101107971.png&#34; alt=&#34;image-20230310110749928&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;三-docker命令配置环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-docker命令配置环境&#34;&gt;#&lt;/a&gt; 三、Docker 命令配置环境&lt;/h2&gt;
&lt;p&gt;按部就班&lt;/p&gt;
&lt;h3 id=&#34;31-docker配置tomcat&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31-docker配置tomcat&#34;&gt;#&lt;/a&gt; 3.1 Docker 配置 Tomcat&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1. 创建文件夹，作为映射文件夹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;mkdir -p /usr/docker/tomcat8081/webapps&lt;/p&gt;
&lt;p&gt;mkdir -p /usr/docker/tomcat8081/logs&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 执行命令，创建 Tomcat 容器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;docker run -d --name tomcat8081 -p 8081:8080 -v /usr/docker/tomcat8081/webapps:/usr/local/tomcat/webapps -v /usr/docker/tomcat8081/logs:/usr/local/tomcat/logs  tomcat:9.0.33&lt;/p&gt;
&lt;p&gt;参数说明：&lt;/p&gt;
&lt;p&gt;1.-d 后台启动&lt;/p&gt;
&lt;p&gt;2.--name 容器的名称 (唯一)&lt;/p&gt;
&lt;p&gt;3.-p 映射端口号设置 格式：访问端口号：软件本身端口号&lt;/p&gt;
&lt;p&gt;4.-v 映射路径设置  格式：真实路径：容器内部的默认路径&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注意：上述的命令是一个命令，不能换行！&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101115501.png&#34; alt=&#34;image-20230310111526443&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 访问测试&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;需要在 /usr/docker/tomcat8081/webapps 创建文件夹 ROOT, 同时在 ROOT 里面创建 index.html&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEwMS40My4xOTUuNDo4MDgxLw==&#34;&gt;http://101.43.195.4:8081/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101121046.png&#34; alt=&#34;image-20230310112112990&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;32-docker配置mysql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#32-docker配置mysql&#34;&gt;#&lt;/a&gt; 3.2 Docker 配置 Mysql&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1. 创建文件夹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;mkdir -p /usr/docker/mysql3307/conf&lt;/p&gt;
&lt;p&gt;mkdir -p /usr/docker/mysql3307/data&lt;/p&gt;
&lt;p&gt;同时在 conf 目录下，创建 my.cnf 文件&lt;/p&gt;
&lt;p&gt;vim /usr/docker/mysql3307/conf/my.cnf&lt;/p&gt;
&lt;p&gt;输入以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[mysqld]
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
symbolic-links=0
log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid
lower_case_table_names=1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101131458.png&#34; alt=&#34;image-20230310113124410&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 执行命令，创建 Mysql 容器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;docker run -d --name mysql3307 -p 3307:3306 -v /usr/docker/mysql3307/conf/my.cnf:/etc/mysql/my.cnf -v /usr/docker/mysql3307/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=qfjava  mysql:5.7&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101131559.png&#34; alt=&#34;image-20230310113104518&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 连接测试&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101130552.png&#34; alt=&#34;image-20230310113026490&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;33-docker配置redis&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#33-docker配置redis&#34;&gt;#&lt;/a&gt; 3.3 Docker 配置 Redis&lt;/h3&gt;
&lt;p&gt;1. 创建文件夹&lt;/p&gt;
&lt;p&gt;mkdir -p /usr/docker/redis6379/data&lt;/p&gt;
&lt;p&gt;mkdir -p /usr/docker/redis6379/conf&lt;/p&gt;
&lt;p&gt;vim /usr/docker/redis6379/conf/redis.conf&lt;/p&gt;
&lt;p&gt;输入以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;requirepass 123456
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101147744.png&#34; alt=&#34;image-20230310114707692&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2. 执行命令，创建容器&lt;/p&gt;
&lt;p&gt;docker run -d --name redis6380 -p 6380:6379  -v /usr/docker/redis6379/conf/redis.conf:/etc/redis/redis.conf -v /usr/docker/redis6379/data:/data  redis:7.0.9 redis-server /etc/redis/redis.conf&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101146621.png&#34; alt=&#34;image-20230310114644564&#34; /&gt;&lt;/p&gt;
&lt;p&gt;3. 访问测试&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101513112.png&#34; alt=&#34;image-20230310151336038&#34; /&gt;&lt;/p&gt;
&lt;p data,conf,log=&#34;&#34;&gt;mkdir -p /usr/docker/rabbitmq5673/&lt;/p&gt;
&lt;p&gt;chmod -R 777 /usr/docker/rabbitmq5673 #   授权&lt;/p&gt;
&lt;p&gt;docker run -d --name rabbitmq5673-p 15672:15672 -p 5673:5672 rabbitmq:management -v /usr/docker/rabbitmq5673/data:/etc/rabbitmq -v /usr/docker/rabbitmq5673/conf:/etc/rabbitmq&lt;/p&gt;
&lt;h2 id=&#34;四-docker-compose&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-docker-compose&#34;&gt;#&lt;/a&gt; 四、Docker-Compose&lt;/h2&gt;
&lt;h3 id=&#34;41-docker-compose&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#41-docker-compose&#34;&gt;#&lt;/a&gt; 4.1 Docker-Compose&lt;/h3&gt;
&lt;p&gt;Docker-Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，可以使用 YML 文件来配置应用程序需要的所有容器。然后，使用一个命令，就可以从 YML 文件配置中创建并启动所有容器。&lt;/p&gt;
&lt;p&gt;Compose 使用的三个步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 Dockerfile 定义应用程序的环境。&lt;/li&gt;
&lt;li&gt;使用 docker-compose.yml 定义构成应用程序的服务，这样它们就可以在隔离环境中一起运行。&lt;/li&gt;
&lt;li&gt;最后，执行 docker-compose up 命令来启动并运行整个应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;容器编排技术，可以一次性创建多个容器，通过自定义 yml 文件&lt;/p&gt;
&lt;p&gt;比如 Docker-Compose 更高级的是 K8s（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2t1YmVybmV0ZXMucDJocC5jb20vJUVGJUJDJTg5&#34;&gt;http://kubernetes.p2hp.com/）&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;42-docker-compose作用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#42-docker-compose作用&#34;&gt;#&lt;/a&gt; 4.2 Docker-Compose 作用&lt;/h3&gt;
&lt;p&gt;可以通过一定语法格式，定义要创建的容器的 yml 文件，然后通过 up 命令，解析 yml 文件，最终可以创建多个容器&lt;/p&gt;
&lt;p&gt;Docker-Compose 的 yml 文件的语法格式：&lt;/p&gt;
&lt;p&gt;yml 文件使用 key: value 方式来指定配置信息 ，key: value 冒号后面必须有个空格&lt;/p&gt;
&lt;p&gt;配置信息通过缩进表示层级关系，缩进使用的是两个空格，不是制表符&lt;/p&gt;
&lt;h3 id=&#34;43-docker-compose安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#43-docker-compose安装&#34;&gt;#&lt;/a&gt; 4.3 Docker-Compose 安装&lt;/h3&gt;
&lt;p&gt;1. 下载&lt;/p&gt;
&lt;p&gt;curl -L &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9nZXQuZGFvY2xvdWQuaW8vZG9ja2VyL2NvbXBvc2UvcmVsZWFzZXMvZG93bmxvYWQvMS4yNi4yL2RvY2tlci1jb21wb3NlLSU2MHVuYW1l&#34;&gt;https://get.daocloud.io/docker/compose/releases/download/1.26.2/docker-compose-`uname&lt;/span&gt; -s &lt;code&gt;-&lt;/code&gt; uname -m` &amp;gt; /usr/local/bin/docker-compose&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101451285.png&#34; alt=&#34;image-20230310145114231&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2. 设置权限&lt;/p&gt;
&lt;p&gt;chmod 777 /usr/local/bin/docker-compose&lt;/p&gt;
&lt;p&gt;3. 验证&lt;/p&gt;
&lt;p&gt;docker-compose -version&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101452965.png&#34; alt=&#34;image-20230310145203934&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;五-docker-compose配置环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-docker-compose配置环境&#34;&gt;#&lt;/a&gt; 五、Docker-Compose 配置环境&lt;/h2&gt;
&lt;h3 id=&#34;51-docker-compose配置tomcat&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#51-docker-compose配置tomcat&#34;&gt;#&lt;/a&gt; 5.1 Docker-Compose 配置 Tomcat&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1. 准备文件夹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;mkdir -p /usr/docker/tomcat8801/webapps&lt;/p&gt;
&lt;p&gt;mkdir -p /usr/docker/tomcat8802/webapps&lt;/p&gt;
&lt;p&gt;mkdir -p /usr/docker/tomcat8803/webapps&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 创建 yml 文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;vim /usr/local/tomcat3.yml&lt;/p&gt;
&lt;p&gt;内容如下所示：&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;3.1&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;tomcat1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;restart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; always&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; tomcat&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;9.0.33&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;container_name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; tomcat8801&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; 8801&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8080&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;TZ&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; Asia/Shanghai&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; /usr/docker/tomcat8801/webapps&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;/usr/local/tomcat/webapps&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;tomcat2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;restart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; always&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; tomcat&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;9.0.33&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;container_name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; tomcat8802&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; 8802&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8080&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;TZ&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; Asia/Shanghai&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; /usr/docker/tomcat8802/webapps&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;/usr/local/tomcat/webapps&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;tomcat3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;restart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; always&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; tomcat&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;9.0.33&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;container_name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; tomcat8803&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; 8803&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8080&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;TZ&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; Asia/Shanghai&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; /usr/docker/tomcat8803/webapps&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;/usr/local/tomcat/webapps&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;3. 执行创建对应的容器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;docker-compose -f /usr/local/tomcat3.yml   up  -d&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101502058.png&#34; alt=&#34;image-20230310150210015&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. 访问测试&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在对应的 webapps 创建文件夹 ROOT, 在 test 创建 index.html 文件&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEwMS40My4xOTUuNDo4ODAx&#34;&gt;http://101.43.195.4:8801&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202306061027011.png&#34; alt=&#34;image-20230606102736949&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;51-docker-compose配置mysql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#51-docker-compose配置mysql&#34;&gt;#&lt;/a&gt; 5.1 Docker-Compose 配置 Mysql&lt;/h3&gt;
&lt;p&gt;1. 创建文件夹&lt;/p&gt;
&lt;p&gt;mkdir -p /usr/docker/mysql3308/conf&lt;/p&gt;
&lt;p&gt;mkdir -p /usr/docker/mysql3309/conf&lt;/p&gt;
&lt;p&gt;mkdir -p /usr/docker/mysql3310/conf&lt;/p&gt;
&lt;p&gt;以此类推创建对应的 my.cnf 文件&lt;/p&gt;
&lt;p&gt;2. 创建对应的 yml 文件&lt;/p&gt;
&lt;p&gt;vim /usr/local/mysql3.yml&lt;/p&gt;
&lt;p&gt;内容如下所示：&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;3.1&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;mysql1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;# 服务的名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;restart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; always   &lt;span class=&#34;token comment&#34;&gt;# 代表只要 docker 启动，那么这个容器就跟着一起启动&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; mysql&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5.7&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 指定镜像路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;container_name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; mysql3308  &lt;span class=&#34;token comment&#34;&gt;# 指定容器名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; 3308&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3306&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;#  指定端口号的映射&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; root   &lt;span class=&#34;token comment&#34;&gt;# 指定 MySQL 的 ROOT 用户登录密码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;TZ&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; Asia/Shanghai        &lt;span class=&#34;token comment&#34;&gt;# 指定时区&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; /usr/docker/mysql3308/conf/my.cnf&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;/etc/mysql/my.cnf    &lt;span class=&#34;token comment&#34;&gt;# 映射数据卷&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;mysql2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;# 服务的名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;restart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; always   &lt;span class=&#34;token comment&#34;&gt;# 代表只要 docker 启动，那么这个容器就跟着一起启动&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; mysql&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5.7&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 指定镜像路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;container_name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; mysql3309  &lt;span class=&#34;token comment&#34;&gt;# 指定容器名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; 3309&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3306&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;#  指定端口号的映射&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; root   &lt;span class=&#34;token comment&#34;&gt;# 指定 MySQL 的 ROOT 用户登录密码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;TZ&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; Asia/Shanghai        &lt;span class=&#34;token comment&#34;&gt;# 指定时区&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; /usr/docker/mysql3309/conf/my.cnf&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;/etc/mysql/my.cnf    &lt;span class=&#34;token comment&#34;&gt;# 映射数据卷&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;mysql3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;# 服务的名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;restart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; always   &lt;span class=&#34;token comment&#34;&gt;# 代表只要 docker 启动，那么这个容器就跟着一起启动&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; mysql&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5.7&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 指定镜像路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;container_name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; mysql3310  &lt;span class=&#34;token comment&#34;&gt;# 指定容器名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; 3310&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3306&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;#  指定端口号的映射&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; root   &lt;span class=&#34;token comment&#34;&gt;# 指定 MySQL 的 ROOT 用户登录密码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;TZ&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; Asia/Shanghai        &lt;span class=&#34;token comment&#34;&gt;# 指定时区&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; /usr/docker/mysql3310/conf/my.cnf&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;/etc/mysql/my.cnf    &lt;span class=&#34;token comment&#34;&gt;# 映射数据卷&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3. 执行命令，创建容器&lt;/p&gt;
&lt;p&gt;docker-compose -f /usr/local/mysql3.yml   up  -d&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202303101509818.png&#34; alt=&#34;image-20230310150959767&#34; /&gt;&lt;/p&gt;
&lt;p&gt;4. 连接测试&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://codingsir.oss-cn-hangzhou.aliyuncs.com/202306061031081.png&#34; alt=&#34;image-20230606103139012&#34; /&gt;&lt;/p&gt;
</content>
        <category term="docker" scheme="http://example.com/categories/docker/" />
        <category term="Linux" scheme="http://example.com/categories/docker/Linux/" />
        <category term="docker" scheme="http://example.com/tags/docker/" />
        <updated>2023-10-21T16:09:40.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2023/10/21/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="http://example.com/2023/10/21/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo new &lt;span class=&#34;token string&#34;&gt;&#34;My New Post&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo server&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo generate&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo deploy&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
</content>
        <updated>2023-10-21T15:56:39.377Z</updated>
    </entry>
</feed>
